{
  "info": {
    "name": "User Management API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection for testing User Management REST API"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base_url}}/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "health"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test('Response has status ok', function () {",
              "  const json = pm.response.json();",
              "  pm.expect(json.status).to.eql('ok');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}"
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "  pm.response.to.have.status(201);",
              "});",
              "pm.test('Response contains user data', function () {",
              "  const json = pm.response.json();",
              "  pm.expect(json.status).to.eql('success');",
              "  pm.expect(json.data).to.have.property('id');",
              "  pm.environment.set('created_user_id', json.data.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get User by ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base_url}}/users/{{created_user_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users",
            "{{created_user_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains same user id', function () {",
              "  const json = pm.response.json();",
              "  pm.expect(json.status).to.eql('success');",
              "  pm.expect(json.data.id).to.eql(parseInt(pm.environment.get('created_user_id')));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create User - Invalid Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Bad Email\",\n  \"email\": \"invalid\",\n  \"age\": 20\n}"
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "  pm.response.to.have.status(400);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create User - Duplicate Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}"
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 409', function () {",
              "  pm.response.to.have.status(409);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disabledSystemHeaders": {}
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "if (!pm.environment.get('base_url')) {",
          "  pm.environment.set('base_url', 'http://localhost:8080');",
          "}"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080"
    },
    {
      "key": "created_user_id",
      "value": "1"
    }
  ]
}
